<Program>               ::= <Module>

<Module>                ::= "module" <Id> <Block>

<Block>                 ::= "{" <Statement>* "}"

<Statement>             ::= <If>
                        |   <While>
                        |   <For>
                        |   <Function>
                        |   (<Function Call>|<Print>|<Declaration>|<Assignment>|<Return Statement>) ";"

<Function>              ::= "function" <Id> <Parameter List> ":" <Type> <Block>

<Return Statement>      ::= "return" <Rvalue>

<Parameter List>        ::= "(" (<Parameter> ",")* ")"
<Parameter>             ::= <Declaration>

<For>                   ::= "for" "(" <Declaration>? ";" <Expression>? ";" <Assignment>? ")" <Block>

<While>                 ::= "while" "(" <Expression> ")" <Block>

<Assignment>            :== <Prefix Operator> <Id>
                        |   <Id> <Postfix Operator>
                        |   <Id> <Assignment Operator> <Rvalue>

<Rvalue>                |   <Expression>

<Prefix Operator>       ::= "++"
                        |   "--"

<Postfix Operator>      ::= "++"
                        |   "--"

<Assignment Operator>   ::= "+="
                        |   "-="
                        |   "*="
                        |   "/="
                        |   "="

<Function Call>         ::= "(" (<Expression> ",")* ")"

<Declaration>           ::= <Id> ":" <Type> ("=" <Rvalue>)?

<Type>                  ::= <Id>

<Print>                 ::= println|print (<String>|<Expression>)

<If>                    ::= "if" "(" <Expression> ")" <Block> <Else>?
<Else>                  ::= "else" (<If>|<Block>)

<Expression>            ::= <Term> ((+|-|\|\||<Relational Operator>) <Expression>)?
<Term>                  ::= <Factor> ((*|/|&&) <Term>)?
<Factor>                ::= [!-] <Factor>
                        |   "(" <Expression> ")"
                        |   <Function Call>
                        |   <Value>

<Function Call>         ::= <Id> "(" (<Expression> ",")* ")"

<Value>                 ::= <Num>
                        |   <Boolean>
                        |   <String>
                        |   <Null>

<Num>                   ::= [0-9]+(\.[0-9]+)?
<Boolean>               ::= true|false
<String>                ::= ^"[^"\\]*(\\.[^"\\]*)*"$
<Null>                  ::= "null"
<Id>                    ::= [A-Za-z][A-Za-z0-9]*

<Relational Operator>   ::= "=="
                        |   "!="
                        |   ">="
                        |   "<="
                        |   ">"
                        |   "<"
